clear
###############################################################################
# check to see if the command was called correctly
###############################################################################
if [ $# -ne 3 ]
then
    echo "Usage - cssubmit course-number section-letter assignment-number"
	echo "for example the command: cssubmit 53 a 3"
	echo "would be for the third assignment in CS53 Section A"
	echo "and for example the command: cssubmit 74 c 9"
	echo "would be for the ninth assignment in CS74 Section C"
    exit 1
fi

###############################################################################
# compiling and executing
###############################################################################
user_random=$RANDOM
if [ $1 -eq 53 ]; then
	echo -e "\033[35m >>>>> Submit will now attempt to compile your program files.\033[0m"
	script -c "g++ *.cpp -o driver"$user_random -q
	
	if [ -f driver$user_random ]; then
		echo -e "\033[35m >>>>> Submit will now attempt to execute your program.\033[0m"
		script -c "./driver"$user_random -q -a
	else
	    echo -e "\033[31m >>>>> Submit was unable to compile your program.\033[0m"
	fi
elif [ $1 -eq 73 ]; then
	echo -e "\033[35m >>>>> Submit will now attempt to compile your program files.\033[0m"
	script -c "ifort *.f90 -o driver"$user_random -q

	if [ -f driver$user_random ]; then
		echo -e "\033[35m >>>>> Submit will now attempt to execute your program.\033[0m"
		script -c "./driver"$user_random -q -a
	else
	    echo -e "\033[31m >>>>> Submit was unable to compile your program.\033[0m"
	fi
elif [ $1 -eq 74 ]; then
	echo -e "\033[35m >>>>> Submit will now attempt to compile your program files.\033[0m"
	script -c "g++ *.cpp -o driver"$user_random -q
	
	if [ -f driver$user_random ]; then
		echo -e "\033[35m >>>>> Submit will now attempt to execute your program.\033[0m"
		script -c "./driver"$user_random -q -a
	else
	    echo -e "\033[31m >>>>> Submit was unable to compile your program.\033[0m"
	fi
elif [ $1 -eq 153 ]; then
	echo -e "\033[35m >>>>> Submit will now attempt to compile your program files.\033[0m"
	script -c "g++ *.cpp -I/usr/local/include -L/usr/local/lib -lcppunit -ldl -o driver"$user_random -q
	
	if [ -f driver$user_random ]; then
		echo -e "\033[35m >>>>> Submit will now attempt to execute your program.\033[0m"
		script -c "valgrind ./driver"$user_random -q -a
	else
	    echo -e "\033[31m >>>>> Submit was unable to compile your program.\033[0m"
	fi
fi

###############################################################################
# making a list of the files to copy to the server
###############################################################################
user_id=$(id -un)

mkdir $user_id$user_random

if [ -f typescript ]; then
	head --lines=700 typescript > student_output
fi

cp student_output $user_id$user_random/ 2> /dev/null
cp *.l $user_id$user_random/ 2> /dev/null
cp *.y $user_id$user_random/ 2> /dev/null
cp *.pl $user_id$user_random/ 2> /dev/null
cp *.lisp $user_id$user_random/ 2> /dev/null
cp *.pdf $user_id$user_random/ 2> /dev/null
cp *.xls $user_id$user_random/ 2> /dev/null
cp *.ppt $user_id$user_random/ 2> /dev/null
cp *.ps $user_id$user_random/ 2> /dev/null
cp *.sh $user_id$user_random/ 2> /dev/null
cp *.doc $user_id$user_random/ 2> /dev/null
cp *.h $user_id$user_random/ 2> /dev/null
cp *.m $user_id$user_random/ 2> /dev/null
cp *.hpp $user_id$user_random/ 2> /dev/null
cp *.cpp $user_id$user_random/ 2> /dev/null
cp *.c $user_id$user_random/ 2> /dev/null
cp *.dat $user_id$user_random/ 2> /dev/null
cp *.txt $user_id$user_random/ 2> /dev/null
cp makefile $user_id$user_random/ 2> /dev/null
cp MAKEFILE $user_id$user_random/ 2> /dev/null
cp Makefile $user_id$user_random/ 2> /dev/null

tar cfz $user_id.tar.gz $user_id$user_random 1> /dev/null

###############################################################################
# copying the files to the server
###############################################################################
echo -e "\033[35m >>>>> Submit will now attempt to send your files to the server.\033[0m"
echo "progress" > sftp_batch
echo "put $user_id.tar.gz" >> sftp_batch
echo "exit" >> sftp_batch
sftp -o "batchmode no" -b sftp_batch $user_id@minersftp.mst.edu:/dfs/users/cpp/dropbox/$1/$2/$3/

###############################################################################
# cleaning up
###############################################################################
rm student_output 2> /dev/null
rm typescript 2> /dev/null
rm driver$user_random 2> /dev/null
rm -rf $user_id$user_random 2> /dev/null
rm $user_id.tar.gz 2> /dev/null
rm sftp_batch 2> /dev/null

###############################################################################
# finished
###############################################################################
echo -e "\033[35m >>>>> Submit is complete.\033[0m"
exit 0
